# Generated by Django 2.2.13 on 2020-06-13 20:55

import core.blocks
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jobs.fields
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0091_auto_20200605_2037'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobOfferIndexPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.BasePage')),
                ('heading', models.CharField(blank=True, max_length=255, verbose_name='Überschrift')),
                ('highlight_in_heading', models.CharField(blank=True, help_text='Wiederhole Text aus der Überschrift der farblich hervorgehoben werden soll', max_length=255, verbose_name='Hervorhebungen in der Überschrift')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='Untertitel')),
                ('before_jobs', wagtail.core.fields.StreamField([('paragraph', core.blocks.ParagraphBlock(features=['h2', 'h3', 'bold', 'italic', 'link', 'ol', 'ul', 'document-link', 'anchor-identifier'])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Bild')), ('caption', wagtail.core.blocks.CharBlock(label='Bildunterschrift', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('text-width', 'Text-Breite'), ('over-text-width', 'Über-Text-Breite')]))])), ('several_images', core.blocks.ImagesBlock(core.blocks.ImageCarouselBlock)), ('gallery', wagtail.core.blocks.StructBlock([('collection', wagtail.core.blocks.ChoiceBlock(choices=core.blocks.get_image_gallery_choices, help_text='Die Bilder aus der Sammlung werden dann als Gallerie angezeigt.', label='Sammlung')), ('start_image', wagtail.images.blocks.ImageChooserBlock(help_text='Das Bild, das als erstes angezeigt wird.', label='erstes Bild', required=False))])), ('embed', wagtail.core.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(help_text='von z.B. einem Youtube-Video, Facebook-Post, Instagram-Bild, …', label='URL')), ('caption', wagtail.core.blocks.CharBlock(label='opt. Beschrift.', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('text-width', 'Text-Breite'), ('over-text-width', 'Über-Text-Breite')]))])), ('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(label='Text')), ('link', wagtail.core.blocks.CharBlock(help_text='Schreibe https://example.com für einen externen Link, /unterseite für einen internen, #sektion für einen Anchor-Link, mailto:max@muster.de für eine E-Mail-Adresse, tel:+49123121 für eine Telefonnummer etc.', label='Link', required=False))])), ('attachment', core.blocks.Attachment()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('map_image', wagtail.core.blocks.StructBlock([('tile_url', wagtail.core.blocks.URLBlock(help_text='URL zu den Kacheln, aus denen das Bild besteht. Benutze {z}, {x}, {y} in der URL für die Koordinaten', label='Kachel-URL', required=True)), ('height', wagtail.core.blocks.DecimalBlock(help_text='in speziellen Leaflet Einheiten', label='Höhe', required=True)), ('width', wagtail.core.blocks.DecimalBlock(help_text='in speziellen Leaflet Einheiten', label='Breite', required=True)), ('attribution', wagtail.core.blocks.CharBlock(help_text='Wird unten rechts im Bild angezeigt.', label='Urheber', required=False))])), ('iframe', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(help_text='URL zu der Website, die mittels Iframe eingebunden werden soll.', label='URL', required=True)), ('allowFullScreen', wagtail.core.blocks.BooleanBlock(label='Vollbild erlauben?', required=False)), ('height', wagtail.core.blocks.DecimalBlock(default='1000', help_text='in px', label='Höhe')), ('width', wagtail.core.blocks.DecimalBlock(default='1000', help_text='in px', label='Breite'))])), ('video_link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(help_text='URL zu dem Video, auf das verlinkt wird', label='URL', required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Bild (schwarz wenn nichts angegeben)', required=False)), ('caption', wagtail.core.blocks.CharBlock(label='Bild-Unterschrift', required=False))]))], blank=True, help_text='Wird als Text vor der Liste der Stellenanzeigen angezeigt. Aber nur wenn es auch Stellenanzeigen gibt.', verbose_name='Vor den Jobs')),
                ('after_jobs', wagtail.core.fields.StreamField([('paragraph', core.blocks.ParagraphBlock(features=['h2', 'h3', 'bold', 'italic', 'link', 'ol', 'ul', 'document-link', 'anchor-identifier'])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Bild')), ('caption', wagtail.core.blocks.CharBlock(label='Bildunterschrift', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('text-width', 'Text-Breite'), ('over-text-width', 'Über-Text-Breite')]))])), ('several_images', core.blocks.ImagesBlock(core.blocks.ImageCarouselBlock)), ('gallery', wagtail.core.blocks.StructBlock([('collection', wagtail.core.blocks.ChoiceBlock(choices=core.blocks.get_image_gallery_choices, help_text='Die Bilder aus der Sammlung werden dann als Gallerie angezeigt.', label='Sammlung')), ('start_image', wagtail.images.blocks.ImageChooserBlock(help_text='Das Bild, das als erstes angezeigt wird.', label='erstes Bild', required=False))])), ('embed', wagtail.core.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(help_text='von z.B. einem Youtube-Video, Facebook-Post, Instagram-Bild, …', label='URL')), ('caption', wagtail.core.blocks.CharBlock(label='opt. Beschrift.', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('text-width', 'Text-Breite'), ('over-text-width', 'Über-Text-Breite')]))])), ('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(label='Text')), ('link', wagtail.core.blocks.CharBlock(help_text='Schreibe https://example.com für einen externen Link, /unterseite für einen internen, #sektion für einen Anchor-Link, mailto:max@muster.de für eine E-Mail-Adresse, tel:+49123121 für eine Telefonnummer etc.', label='Link', required=False))])), ('attachment', core.blocks.Attachment()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('map_image', wagtail.core.blocks.StructBlock([('tile_url', wagtail.core.blocks.URLBlock(help_text='URL zu den Kacheln, aus denen das Bild besteht. Benutze {z}, {x}, {y} in der URL für die Koordinaten', label='Kachel-URL', required=True)), ('height', wagtail.core.blocks.DecimalBlock(help_text='in speziellen Leaflet Einheiten', label='Höhe', required=True)), ('width', wagtail.core.blocks.DecimalBlock(help_text='in speziellen Leaflet Einheiten', label='Breite', required=True)), ('attribution', wagtail.core.blocks.CharBlock(help_text='Wird unten rechts im Bild angezeigt.', label='Urheber', required=False))])), ('iframe', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(help_text='URL zu der Website, die mittels Iframe eingebunden werden soll.', label='URL', required=True)), ('allowFullScreen', wagtail.core.blocks.BooleanBlock(label='Vollbild erlauben?', required=False)), ('height', wagtail.core.blocks.DecimalBlock(default='1000', help_text='in px', label='Höhe')), ('width', wagtail.core.blocks.DecimalBlock(default='1000', help_text='in px', label='Breite'))])), ('video_link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(help_text='URL zu dem Video, auf das verlinkt wird', label='URL', required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Bild (schwarz wenn nichts angegeben)', required=False)), ('caption', wagtail.core.blocks.CharBlock(label='Bild-Unterschrift', required=False))]))], blank=True, help_text='Wird als Text nach der Liste der Stellenanzeigen angezeigt. Aber nur wenn es auch Stellenanzeigen gibt.', verbose_name='Nach den Jobs')),
                ('empty', wagtail.core.fields.StreamField([('paragraph', core.blocks.ParagraphBlock(features=['h2', 'h3', 'bold', 'italic', 'link', 'ol', 'ul', 'document-link', 'anchor-identifier'])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Bild')), ('caption', wagtail.core.blocks.CharBlock(label='Bildunterschrift', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('text-width', 'Text-Breite'), ('over-text-width', 'Über-Text-Breite')]))])), ('several_images', core.blocks.ImagesBlock(core.blocks.ImageCarouselBlock)), ('gallery', wagtail.core.blocks.StructBlock([('collection', wagtail.core.blocks.ChoiceBlock(choices=core.blocks.get_image_gallery_choices, help_text='Die Bilder aus der Sammlung werden dann als Gallerie angezeigt.', label='Sammlung')), ('start_image', wagtail.images.blocks.ImageChooserBlock(help_text='Das Bild, das als erstes angezeigt wird.', label='erstes Bild', required=False))])), ('embed', wagtail.core.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(help_text='von z.B. einem Youtube-Video, Facebook-Post, Instagram-Bild, …', label='URL')), ('caption', wagtail.core.blocks.CharBlock(label='opt. Beschrift.', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('text-width', 'Text-Breite'), ('over-text-width', 'Über-Text-Breite')]))])), ('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(label='Text')), ('link', wagtail.core.blocks.CharBlock(help_text='Schreibe https://example.com für einen externen Link, /unterseite für einen internen, #sektion für einen Anchor-Link, mailto:max@muster.de für eine E-Mail-Adresse, tel:+49123121 für eine Telefonnummer etc.', label='Link', required=False))])), ('attachment', core.blocks.Attachment()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('map_image', wagtail.core.blocks.StructBlock([('tile_url', wagtail.core.blocks.URLBlock(help_text='URL zu den Kacheln, aus denen das Bild besteht. Benutze {z}, {x}, {y} in der URL für die Koordinaten', label='Kachel-URL', required=True)), ('height', wagtail.core.blocks.DecimalBlock(help_text='in speziellen Leaflet Einheiten', label='Höhe', required=True)), ('width', wagtail.core.blocks.DecimalBlock(help_text='in speziellen Leaflet Einheiten', label='Breite', required=True)), ('attribution', wagtail.core.blocks.CharBlock(help_text='Wird unten rechts im Bild angezeigt.', label='Urheber', required=False))])), ('iframe', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(help_text='URL zu der Website, die mittels Iframe eingebunden werden soll.', label='URL', required=True)), ('allowFullScreen', wagtail.core.blocks.BooleanBlock(label='Vollbild erlauben?', required=False)), ('height', wagtail.core.blocks.DecimalBlock(default='1000', help_text='in px', label='Höhe')), ('width', wagtail.core.blocks.DecimalBlock(default='1000', help_text='in px', label='Breite'))])), ('video_link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(help_text='URL zu dem Video, auf das verlinkt wird', label='URL', required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Bild (schwarz wenn nichts angegeben)', required=False)), ('caption', wagtail.core.blocks.CharBlock(label='Bild-Unterschrift', required=False))]))], blank=True, help_text='Wird angezeigt, wenn es keine Stellenanzeigen gibt.', null=True, verbose_name='Wenn keine Jobs')),
            ],
            options={
                'verbose_name': 'Auflistung von Stellenausschreibungen',
                'verbose_name_plural': 'Auflistungen von Stellenausschreibungen',
            },
            bases=('core.basepage',),
        ),
        migrations.CreateModel(
            name='JobOfferPage',
            fields=[
                ('standardpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.StandardPage')),
                ('hiring_organization_name', models.CharField(default='JANUN e.V.', max_length=255, verbose_name='Arbeitgeber')),
                ('job_location', models.CharField(blank=True, default='Hannover', max_length=255, verbose_name='Job-Ort')),
                ('job_title', models.CharField(max_length=255, verbose_name='Job-Titel')),
                ('valid_through', models.DateTimeField(blank=True, validators=[django.core.validators.MinValueValidator(django.utils.timezone.now, message='Sollte in der Zukunft liegen')], verbose_name='Bewerbungsfrist')),
                ('auto_unpublish', models.BooleanField(default=True, help_text='Depubliziert die Seite automatisch nach der Bewerbungsfrist', verbose_name='Automatisch depublizieren')),
                ('hiring_organization_url', models.URLField(blank=True, default='https://www.janun.de/', verbose_name='Website des Arbeitgebers')),
                ('employment_type', jobs.fields.ChoiceArrayField(base_field=models.CharField(choices=[('FULL_TIME', 'Vollzeit'), ('PART_TIME', 'Teilzeit'), ('CONTRACTOR', 'Auftragnehmer'), ('TEMPORARY', 'befristet'), ('INTERN', 'Praktikum'), ('VOLUNTEER', 'Freiwilligendienst'), ('PER_DIEM', 'tageweise'), ('OTHER', 'anderes')], max_length=20), blank=True, null=True, size=None, verbose_name='Art der Anstellung')),
                ('base_salary_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Grundgehalt')),
                ('base_salary_unit', models.CharField(choices=[('HOUR', 'pro Stunde'), ('DAY', 'pro Tag'), ('WEEK', 'pro Woche'), ('MONTH', 'pro Monat'), ('YEAR', 'pro Jahr')], default='MONTH', max_length=10, verbose_name='Zeitraum für Grundgehalt')),
            ],
            options={
                'verbose_name': 'Stellenausschreibung',
                'verbose_name_plural': 'Stellenausschreibungen',
            },
            bases=('core.standardpage',),
        ),
    ]
