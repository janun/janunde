/**
 * hides with display none important
 * @mixin hide
 */
@mixin hide() {
  display: none !important;
}


/**
 * helper to hide with display: none.
 * You can give a condition to hide on after the @.
 * This can be media queries preceded by only, until oder above
 * or js or no-js
 *
 * @section Helpers
 *
 * @markup
 *   <div class="hide">Never shown</div>
 *   <div class="hide@large">hidden on large and above</div>
 *   <div class="hide@only-small">hidden on small</div>
 *   <div class="hide@until-large">hidden on small and medium</div>
 *   <div class="hide@above-medium">hidden on medium, large and above</div>
 *   <div class="hide@no-js">hidden if no js</div>
 *   <div class="hide@js">hidden if js</div>
 */
.hide {
  @include hide;

  /// .hide@small, .hide@medium, ...
  @each $name, $value in $breakpoints {
    &\@#{$name} {
      @include above($value) { @include hide; }
    }
  }

  /// .hide@until-small, .hide@until-medium, ...
  @each $name, $value in $breakpoints {
    &\@until-#{$name} {
      @include until($value) { @include hide; }
    }
  }

  /// .hide@only-small, .hide@only-medium, ...
  @each $name, $value in $breakpoints {
    &\@only-#{$name} {
      @include only($value) { @include hide; }
    }
  }

  /// .hide@no-js
  .no-js &\@no-js {
    @include hide;
  }

  /// .hide@js
  .js &\@js {
    @include hide;
  }

}


// hide by aria-hidden
// this might be used by js to hide things
// [aria-hidden="true"] {
//   @include hide;
// }
.hide-aria-hidden[aria-hidden="true"],
.hide-aria-hidden [aria-hidden="true"] {
  @include hide;
}
